How do I generate that SHA256 hash?
1. The sha256 hash is a proof of work. A proof of work is a piece of data which is difficult (costly, time-consuming) to produce but easy for others to verify and which satisfies certain requirements. This is a measure to deter denial of service attacks and other service abuses such as spam on a network by requiring some work from the service requester.

The server checks the response by doing the following:

    def proof_of_work(self):
        goal = hex(random.randint(0x100000, 0xFFFFFF))[2:]
        self.request.send(bytes(
            "Find Sha256 starting with " + goal + "\n", "utf-8"
        ))
        proof = self.request.recv(256).strip()
        result = hashlib.sha256(proof).hexdigest()

        print(result, goal)

        if result[:len(goal)] != goal:
            return False
        return True

proofofwork.sha256 from https://github.com/kmyk/libproofofwork will generate it for you

Why do I get a bunch of random characters when I connected to the server?
2. Try outputting that data to a file.

The server closes my connection before I've had time to pwn the binary. How can I get around this?
3. Try automating your solution
