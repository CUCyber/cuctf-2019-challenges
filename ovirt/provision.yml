- name: "Create VM: {{ item.name }}"
  ovirt_vm:
    auth: "{{ ovirt_auth }}"
    name: "{{ item.name }}"
    state: present
    cluster: "2019"
    template: "{{ item.template }}"
    memory: "{{ item.memory }}"
    cpu_cores: "{{ item.cpu_cores }}"
    clone: yes

- name: "Tag VM: {{ item.name }}"
  ovirt_tag:
    auth: "{{ ovirt_auth }}"
    name: cuctf
    state: attached
    vms:
      - "{{ item.name }}"

- name: "Update MAC: {{ item.name }}"
  ovirt_nic:
    auth: "{{ ovirt_auth }}"
    vm: "{{ item.name }}"
    name: nic1
    state: present
    interface: virtio
    mac_address: "{{ item.mac_address }}"
    network: "{{ item.vlan }}"

- name: "Start VM: {{ item.name }}"
  ovirt_vm:
    auth: "{{ ovirt_auth }}"
    name: "{{ item.name }}"
    state: running
    cloud_init_persist: yes
    cloud_init:
      host_name: "{{ item.hostname }}"
      user_name: root
      root_password: "{{ lookup('password', 'creds/{{ item.name }}/root length=24') }}"
      regenerate_ssh_keys: true
      custom_script: |
        write_files:
          - encoding: b64
            path: /root/challenge.tar.gz
            content: "{{ lookup('pipe', "tar -C '../" + item.path|dirname + "' -cz '" + item.path|basename + "' | base64") }}"
        bootcmd:
          - "rm -f /etc/machine-id"
          - "systemd-machine-id-setup"
        runcmd:
          - "rm -rf /root/challenge"
          - "mkdir -p /root/challenge"
          - "tar -C /root/challenge --strip-components 1 -xzf /root/challenge.tar.gz"
          - "rm -f /root/challenge.tar.gz"
          - |
            bash -c {{ ("[ -f /root/challenge/docker-compose.yml ] && (docker-compose -f /root/challenge/docker-compose.yml -p '" + item.name + "' build && sed -i -e '/^@reboot root \/usr\/bin\/docker-compose/d' /etc/crontab && echo '@reboot root /usr/bin/docker-compose -f /root/challenge/docker-compose.yml -p '" + '"' + "'" + '"' + "'" + item.name + "'" + '"' + "'" + '"' + "' up -d' >>/etc/crontab && docker-compose -f /root/challenge/docker-compose.yml -p '" + item.name + "' up -d) || (docker build -t '" + item.name + "' /root/challenge && docker run --restart always -p '" + item.port + "' -d '" + item.name + "')")|quote }}
          - |
            bash -c {{ item.post|default(':')|quote }}
