# $ find . -name 'Dockerfile' | grep -v Heist | grep -Fv '/exploit/' | grep -Fv '/src/'
# ./web-exploitation/Responsive/Dockerfile
# ./web-exploitation/Web3/Dockerfile
# ./web-exploitation/Paths/Dockerfile
# ./web-exploitation/Web2/Dockerfile
# ./web-exploitation/ReadMe/Dockerfile
# ./web-exploitation/Election/Dockerfile
# ./web-exploitation/Web1/Dockerfile
# ./cryptography/SMS/Dockerfile
# ./cryptography/RSAdmin/Dockerfile
# ./binary-exploitation/Bof1/Dockerfile
# ./binary-exploitation/Uaf1/Dockerfile
# ./binary-exploitation/Aegis/Dockerfile
# ./binary-exploitation/VM/Dockerfile
# ./binary-exploitation/Bof3/Dockerfile
# ./binary-exploitation/Spectre/Dockerfile
# ./binary-exploitation/Bof2/Dockerfile
# ./binary-exploitation/Uaf2/Dockerfile
# ./binary-exploitation/Tcash/Dockerfile
---
- name: CUCTF Provisioning
  hosts: localhost

  vars_prompt:
    - name: ovirt_username
      prompt: "oVirt Login Details (architect.lab.cucyber.net)\n---\nUsername"
      private: no
    - name: ovirt_password
      prompt: "Password"

  vars:
    - vms:
      - template: cuctf-template
        name: cuctf-bof1
        memory: 2GiB
        cpu_cores: 1
        vlan: cuctf
        mac_address: 56:6f:78:90:00:01
        hostname: bof1.ctf.cuctf.io
        port: 9000
        path: binary-exploitation/Bof1

  tasks:
    - name: Obtain Auth
      ovirt_auth:
        url: https://architect.lab.cucyber.net/ovirt-engine/api
        username: "{{ ovirt_username }}"
        password: "{{ ovirt_password }}"
        ca_file: ca.pem

    - block:
      - name: Create VMs
        ovirt_vm:
          auth: "{{ ovirt_auth }}"
          name: "{{ item.name }}"
          cluster: "2019"
          template: "{{ item.template }}"
          memory: "{{ item.memory }}"
          cpu_cores: "{{ item.cpu_cores }}"
          clone: yes
          state: present
        with_items: "{{ vms }}"

      - name: Tag VMs
        ovirt_tag:
          auth: "{{ ovirt_auth }}"
          name: cuctf
          state: attached
          vms:
            - "{{ item.name }}"
        with_items: "{{ vms }}"

      - name: Update MAC of VMs
        ovirt_nic:
          auth: "{{ ovirt_auth }}"
          vm: "{{ item.name }}"
          name: nic1
          state: present
          interface: virtio
          mac_address: "{{ item.mac_address }}"
          network: "{{ item.vlan }}"
        with_items: "{{ vms }}"

      - name: Start VMs
        ovirt_vm:
          auth: "{{ ovirt_auth }}"
          name: "{{ item.name }}"
          state: running
          cloud_init:
            host_name: "{{ item.hostname }}"
            user_name: root
            root_password: "{{ lookup('password', 'creds/{{ item.name }}/root length=24') }}"
            regenerate_ssh_keys: true
            custom_script: |
              write_files:
                - encoding: b64
                  path: /root/challenge.tar.gz
                  content: "{{ lookup('pipe', "tar -C '../" + item.path|dirname + "' -cz '" + item.path|basename + "' | base64") }}"
              bootcmd:
                - [ rm, -f, /etc/machine-id ]
                - [ systemd-machine-id-setup ]
              runcmd:
                - [ rm, -rf, /root/challenge ]
                - [ mkdir, -p, /root/challenge ]
                - [ tar, -C, /root/challenge, --strip-components, 1, -xzf, /root/challenge.tar.gz ]
                - [ rm, -f, /root/challenge.tar.gz ]
                - [ docker, build, -t, "{{ item.name }}", /root/challenge ]
                - [ docker, run, --restart, always, -p, "{{ item.port }}:{{ item.port }}", -d, "{{ item.name }}" ]
        with_items: "{{ vms }}"

      always:
        - name: Revoke Auth
          ovirt_auth:
            ovirt_auth: "{{ ovirt_auth }}"
            state: absent
