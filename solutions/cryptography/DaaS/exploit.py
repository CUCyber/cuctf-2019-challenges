import requests
from random import randint
from Crypto.PublicKey import RSA

HOST = "daas.ctf.cuctf.io"
PORT = 8100

def int_to_bytes(n):
    ''' https://stackoverflow.com/a/30375198/3610102 '''
    return n.to_bytes((n.bit_length() + 7) // 8, 'big')

def mod_inv(a, n):
    t, r = 0, n
    new_t, new_r = 1, a

    while new_r != 0:
        quotient = r // new_r
        t, new_t = new_t, t - quotient * new_t
        r, new_r = new_r, r - quotient * new_r

    if r > 1:
        raise Exception("a is not invertible")
    if t < 0:
        t = t + n

    return t

def exploit(ciphertext, n, e):
    while True:
        s = randint(2, n - 1)
        if s % n > 1:
            break

    new_ciphertext = (pow(s, e, n) * ciphertext) % n

    r = requests.post(
        f"http://{HOST}:{PORT}/",
        data={'ciphertext': new_ciphertext}
    )
    int_plaintext = int.from_bytes(r.content, byteorder='big')

    r = (int_plaintext * mod_inv(s, n)) % n
    print(int_to_bytes(r).decode('utf-8'))

samples = requests.get(f"http://{HOST}:{PORT}/sample").json()
ciphertext = samples['samples'][3]

key = requests.get(f"http://{HOST}:{PORT}/key").text
key = key.replace("<br />", "\n")
key = RSA.importKey(key)

exploit(ciphertext, key.n, key.e)
